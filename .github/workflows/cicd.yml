# see: https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions
# see: https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows
on:
  push:
    branches: [ "main" ]
  release:
    types: [ "published" ]

jobs:

  build-information:
    name: "Build Information"
    runs-on: "ubuntu-latest"
    steps:
      - name: "Output Build Information"
        run: "echo '${{ toJSON(github) }}'"
  
  linux-x86-64:
    name: "Linux x86-64"
    runs-on: "ubuntu-latest"
    steps:

      - name: "Checkout"  
        uses: "actions/checkout@v2"

      - name: "Install Build Dependencies"
        run: "sudo apt-get install -y libossp-uuid-dev"

      - name: "Setup .NET"
        uses: "actions/setup-dotnet@v1"
        env:
          DOTNET_CLI_TELEMETRY_OPTOUT: "1"
          DOTNET_SKIP_FIRST_TIME_EXPERIENCE: "1"
          DOTNET_NOLOGO: "1"
        with:
          dotnet-version: "6.0.x"

      - name: "Build Postgres"
        run: "./Protoculture.Postgres.Embedded/build-postgres-linux.sh"

      - name: "Test Integration"
        env:
          DOTNET_CLI_TELEMETRY_OPTOUT: "1"
          DOTNET_SKIP_FIRST_TIME_EXPERIENCE: "1"
          DOTNET_NOLOGO: "1"
        run: "dotnet test"

      - name: "Provide Postgres Build"
        uses: "actions/upload-artifact@v2"
        with:
          name: "postgres-linux-x64"
          path: "./Protoculture.Postgres.Embedded/postgres"

  # see: https://github.com/npgsql/npgsql/blob/main/.github/workflows/build.yml#L136
  windows-x86-64:
    name: "Windows x86-64"
    runs-on: "windows-latest"
    steps:

      - name: "Checkout"
        uses: "actions/checkout@v2"

      - name: "Setup .NET"
        uses: "actions/setup-dotnet@v1"
        env:
          DOTNET_CLI_TELEMETRY_OPTOUT: "1"
          DOTNET_SKIP_FIRST_TIME_EXPERIENCE: "1"
          DOTNET_NOLOGO: "1"
        with:
          dotnet-version: "6.0.x"

      # see: https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.localaccounts/new-localuser
      - name: "Configure Unprivileged User"
        run: 'New-LocalUser -Name "postgres" -NoPassword'

      - name: "Build Postgres"
        run: "./Protoculture.Postgres.Embedded/build-postgres-windows.ps1"
  
#      - name: "Test Integration"
#        env:
#          DOTNET_CLI_TELEMETRY_OPTOUT: "1"
#          DOTNET_SKIP_FIRST_TIME_EXPERIENCE: "1"
#          DOTNET_NOLOGO: "1"
#        run: "dotnet test"

      - name: "Provide Postgres Build"
        uses: "actions/upload-artifact@v2"
        with:
          name: "postgres-windows-x64"
          path: "./Protoculture.Postgres.Embedded/postgres"

  package:
    name: "Package"
    runs-on: "ubuntu-latest"
    needs: [ 
        "linux-x86-64", 
        "windows-x86-64", 
    ]
    steps:

      - name: "Checkout"
        uses: "actions/checkout@v2"

      - name: "Download Linux X64 Build" 
        uses: "actions/download-artifact@v2"
        with:
          name: "postgres-linux-x64"
          path: "Protoculture.Postgres.Embedded/postgres"

#      - name: "Download Windows X64 Build"
#        uses: "actions/download-artifact@v2"
#        with:
#          name: "postgres-windows-x64"
#          path: "Protoculture.Postgres.Embedded/postgres"

      - name: "Show Builds"
        run: "ls -Al ./Protoculture.Postgres.Embedded/postgres/"

      - name: "Setup .NET"
        uses: "actions/setup-dotnet@v1"
        env:
          DOTNET_CLI_TELEMETRY_OPTOUT: "1"
          DOTNET_SKIP_FIRST_TIME_EXPERIENCE: "1"
          DOTNET_NOLOGO: "1"
        with:
          dotnet-version: "6.0.x"

      - name: "Authenticate to Nuget"
        env:
          NUGET_TOKEN_USERNAME: "atrauzzi"
          NUGET_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        run: |
          dotnet nuget add source \
            https://nuget.pkg.github.com/atrauzzi/index.json \
            --store-password-in-clear-text \
            --name github-atrauzzi \
            --username ${NUGET_TOKEN_USERNAME} \
            --password ${NUGET_TOKEN}

      - name: "Build and Pack"
        env:
          DOTNET_CLI_TELEMETRY_OPTOUT: "1"
          DOTNET_SKIP_FIRST_TIME_EXPERIENCE: "1"
          DOTNET_NOLOGO: "1"
        working-directory: "./Protoculture.Postgres.Embedded"
        run: |
          dotnet pack \
            --configuration="Release" \
            -property:version="${GITHUB_REF_NAME}-pre"

      - name: "Show Package"
        run: "ls -Al ./Protoculture.Postgres.Embedded/bin/Release/"

      - name: "Publish Package Artifact"
        uses: "actions/upload-artifact@v2"
        with:
          name: "release"
          path: "./Protoculture.Postgres.Embedded/bin/Release/*.*nupkg"

      - name: "Push Personal Nuget Package"
        if: ${{ github.event_name == 'release' && github.event.action == 'published' }}
        env:
          DOTNET_CLI_TELEMETRY_OPTOUT: "1"
          DOTNET_SKIP_FIRST_TIME_EXPERIENCE: "1"
          DOTNET_NOLOGO: "1"
          NUGET_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        run: |
          dotnet nuget push \
            "./Protoculture.Postgres.Embedded/bin/Release/Protoculture.Postgres.Embedded.*.nupkg" \
            --source https://nuget.pkg.github.com/atrauzzi/index.json \
            --api-key "${NUGET_TOKEN}"
